server:
  port: 0
spring:
  r2dbc:
    url: r2dbc:postgresql://localhost:xxx/acceptance-test-db
    username: sa
    password: sa
  mail:
    host: 127.0.0.1
    port: 0
    username: job-alert-sender@localhost
    password: 12345678
  flyway:
    user: sa
    password: sa
    url: jdbc:postgresql://localhost:xxx/acceptance-test-db
  task:
    scheduling:
      pool:
        size: 2

management:
  health:
    probes:
      enabled: true
    r2dbc:
      enabled: false
      interval: 1
    mail:
      enabled: true
      interval: 1
    telegram:
      enabled: true
      interval: 1
    db:
      enabled: false
    diskSpace:
      enabled: false
    ping:
      enabled: false
  endpoint:
    info:
      enabled: true
    health:
      show-components: always
      show-details: never
  endpoints:
    web:
      exposure:
        include: health,info
  info:
    env:
      enabled: true
  metrics:
    distribution:
      percentiles[http.server.requests]: 0.95, 0.99
      percentiles-histogram[http.server.requests]: true
      slo[http.server.requests]: 100ms, 500ms

application:
  scheduler:
    weekly:
      cron: '-'
      zone: Europe/Madrid
    periodic:
      cron: '-'
      zone: Europe/Madrid
  site:
    connect-timeout: 1
    read-timeout: 1

sites:
  - name: JobSite1
    url: http://localhost:xxx/job-site-1
    strategy:
      type: basicHtml
      steps: ul.menu_pag,li,a
    notifications:
      - type: telegram
        recipients:
          - chatId1
      - type: email
        recipients:
          - job-alert-recipient@localhost

email:
  enabled: true
  from: job-alert-sender@localhost

telegram:
  enabled: true
  baseUrl: http://localhost:xxxx
  botKey: 1234:abcd

newrelic:
  app:
    name: JobAlerts_test - Micrometer
  metric:
    step: 1
    ingest:
      uri: http://localhost:xxxx/metric/v1
  key:
    license: licenseKey

info:
  app:
    name: Job Alerts
    description: Check job sites periodically to alert about new job openings
    version: 1.0.0
