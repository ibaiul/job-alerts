name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.3

      - name: Set up variables
        run: |
          if [ ${{ github.ref }} == 'refs/heads/master' ]; then
            echo "RELEASE_TAG=latest" >> $GITHUB_ENV
            echo "SNYK_ACTION=monitor" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=beta" >> $GITHUB_ENV
            echo "SNYK_ACTION=test" >> $GITHUB_ENV
          fi

      - name: Test
        run: ./gradlew test

      - name: Sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_PROJECT: ${{ secrets.SONAR_PROJECT }}
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF} | sed 's/refs\///g' | sed 's/heads\///g' | sed 's/\/merge//g' | sed 's/pull\//PR-/g')
          ./gradlew sonar -Dsonar.login=${SONAR_TOKEN}  -Dsonar.branch.name=${BRANCH_NAME} -Dsonar.organization=${SONAR_ORGANIZATION} -Dsonar.projectKey=${SONAR_PROJECT}

      - name: Scan Dependencies
        uses: snyk/actions/gradle-jdk17@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          SNYK_ORGANIZATION: ${{ secrets.SNYK_ORGANIZATION }}
          SNYK_PROJECT: ${{ secrets.SNYK_PROJECT }}
        with:
          args: --all-projects --severity-threshold=high --policy-path=. --project-name=${SNYK_PROJECT} --org=${SNYK_ORGANIZATION}
          command: ${{ env.SNYK_ACTION }}

      - name: Package
        run: ./gradlew bootJar

      - name: Login to DockerHub
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/master'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASS }}

      - name: Docker Publish
        if: github.event_name == 'pull_request' || github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v3
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_HUB_IMAGE }}
        with:
          context: .
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }},${{ env.IMAGE_NAME }}:${{ env.RELEASE_TAG }}
          push: true
